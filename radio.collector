<?php
//$data = $_['data']; //Get data
//$type = $_['type']; //Get object name

if (isset($data) && isset($type)) {
    if (isset($_['time'])) {
        $time = $_['time'];
    } else {
        $time = time();
    }

  
    //Save MAXDATA times data whatever
    Data::saveData('', $data, $type, $time, '', MAXDATA);
    
    $dataExploded = explode("/", $data);
    $protocol = $dataExploded[2];

//Detect Sensor
    if ($protocol == 'text') {
        array_shift($dataExploded);
        array_shift($dataExploded);
        array_shift($dataExploded);
        $sensorData = implode("", $dataExploded);
        var_dump($sensorData);

        $radioHeadData = explode(',', $sensorData);
        if (count($radioHeadData) > 1) {
            foreach ($radioHeadData as $value) {
                $valueID = substr($value, 0, 2);
                var_dump($valueID);
            //var_dump($info_value);
                if ($valueID == 'T:') {
                    $sensor['id'] = substr($value, 2);
                }

                if ($valueID == 'V:') {
                    $sensor['value'] = substr($value, 2);
                }

                if ($valueID == 'B:') {
                    $sensor['battery'] = substr($value, 2);
                }
            }

            if (count($sensor) > 1) {
                if (!isset($sensor['battery']) && count($sensor) > 1) {
                    $sensor['battery'] = 'ON';
                }
            } else {
                unset($sensor);
            }
        }
    }


    //If a sensor is detected
    if (isset($sensor)) {
        $sensorInfo = Data::checkSensor($sensor, $time); //Check if sensor exists

 

        if ($sensorInfo['sensor_save'] == '1') {
            $dbAvailable = Data::dbAvailable($sensorInfo['sensor_type']);
        //var_dump($dbAvailable);
            if ($dbAvailable) {
                //We doesn't manage more than one way to save data for now.

                if ($dbAvailable[0] == 'rrd.md') {
                    echo "OK RRD!\n";
                    require_once 'core/schema/RRDKana.class.php';
                    $rrd_db = new RRDKana($sensorInfo['sensor_type'], $sensor['id']);
                    $rrd_db->update($sensor['value']);
                }
            }
        }
    }

    //Check for triggers
    Data::checkTriggers($data, $type, $time);
}
